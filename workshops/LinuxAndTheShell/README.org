#+TITLE: Linux And The Console
#+OPTIONS: toc:nil num:nil timestamp:nil author:nil
#+REVEAL_ROOT: ../../reveal.js
#+REVEAL_TRANS: slide
#+REVEAL_THEME: black
#+REVEAL_EXTRA_CSS: ../custom.css


* =SPACE= for next slide

* =Shift+SPACE= for previous slide
* Tools required
+ Text Editor (For notes and questions)
+ Terminal (Apparatus)
+ File Manager (See things graphically)
* What is **nix*?
**nix* represents /Unix/ and /Unix like/ systems
* Topics to be covered
+ The shell
+ Basic commands
+ Linux file system
* Why Linux?
+ Understand Computers in a better way
+ Developer friendly
+ It is LICENCED to be hacker friendly
+ It is your computer. Know how to fix it.
* Why not Linux?
+ You are religious
+ You are lazy
+ You fear the console
* The ="Hello World!"= program
#+NAME: hello-world-in-shell
#+BEGIN_EXAMPLE
$ echo 'Hello World!'
Hello World!
$ â–ˆ
#+END_EXAMPLE
* Everything is a FILE on *nix systems
+ Storage Devices
+ I/O Devices
+ Memory
+ You can find these in the =/dev/= directory
* Environment variables
These variables *govern the way applications communicate with the OS* to
access certain resources.

Some examples are:
+ =$PATH=: Stores location of executables on the system
+ =$PWD=: Stores the current directory
+ And lots more ...

* Most basic commands

** =pwd= - Shows value of =$PWD=
** =ls= - List files in =$PWD=
** =cd path= - Change =$PWD=
*** What is a /Path/?
A /path/ defines the location of a file
*** Types of /Path/
+ *Absolute* - =/home/username/emacs.pdf=
+ *Relative* - =username/emacs.pdf= is the path relative to =/home=
  working directory
*** Special paths
| =~=  | Home directory     |
| =.=  | Current directory  |
| =..= | Previous directory |
| =/=  | Root directory     |
* Getting help
#+BEGIN_SRC shell
  man ls          # Manual entry for ls
  help pwd        # Shell's pwd help
  /bin/pwd --help # Command specific help
#+END_SRC
* Time elapsed since last startup
#+NAME: uptime-command
#+BEGIN_SRC shell :results output :exports both :cache yes
  uptime -p
#+END_SRC
#+RESULTS[a48b79ef3365541dd80715d61cb5ceb16ea90280]: uptime-command
: up 2 days, 23 hours, 38 minutes
* ="/"= - The Root directory
+ The base of the file system
+ All other directories are listed inside it
+ Even the external devices are mounted inside it
+ You cannot go outside it
* =which cmd= - Prints path of the executable
** =/sbin=, =/bin= - Location of commonly used binaries
* =/home/username= - Home folder of =username=
* =/boot= - Boot files are located here

* Each and every command returns an integer after execution
+ =0= represents *success*
+ =Non-zero= represents *failure* of the command
+ =echo $?= - Prints return value of last command
* Make a directory
#+BEGIN_SRC shell :exports code
  mkdir <dir_name>
#+END_SRC

* Make an empty file
#+BEGIN_SRC shell :exports code
  touch <file_name>
#+END_SRC

* Remove an empty directory
#+BEGIN_SRC shell :exports code
  rmdir <dir_name>
#+END_SRC
Use this when safety is the first priority

* Remove any directory
#+BEGIN_SRC shell :exports code
  rm -rf <dir_name>
#+END_SRC
| -r | Recursively |
| -f | Force       |
* Editors
+ ed - Simplest
+ nano - Easiest
+ vim - Best
+ Emacs - Elisp interpreter
** nano
+ =^X= to exit
+ =M-I= to enable Auto Indent
=M= = =ESC= or =Alt= \\
=^= = =Ctrl=
** vim
It is a *modal editor*.
| /Mode/       | /Comment/          |
|--------------+--------------------|
| Command      | Pressing shortcuts |
| Insert       | Inserting text     |
| Command line | Writing commands   |
*** Remember
+ Press =ESC= to cancel action or go to *command mode*
+ Always be in command mode unless specified
+ Press =i= or =a= to get into *insert mode*
+ Press =:= to get into *command line mode*
*** =:q!= - Force Quit
*** =dd= - Deletes a line
*** =v= - To enter visual mode
Use =h=, =j=, =k= and =l= keys to select the region.
- =x= - To *cut*
- =y= - To *copy* / *yank*
- =p= - To paste
*** =:x= - Save and Quit
*** =:set autoindent= - Auto indent
*** Learn advanced vim from
- [[https://www.digitalocean.com/community/tutorials/how-to-use-vim-for-advanced-editing-of-plain-text-or-code-on-a-vps--2][Digital Ocean]]
- [[https://github.com/akrawchyk/awesome-vim][Awesome Vim]]
- [[https://www.openvim.com/][Vim tutorial]]
- [[https://vimvalley.com/][Advanced vim tutorial]] - Freemium
* Controlling processes
** =Ctrl+C= sends *force quit* signal to a running process
** =Ctrl+Z= to pause a process
** After pausing you have two options
+ =fg= resumes the process in the =ForeGround=
+ =bg= resumes the process in the =BackGround=
+ Or kill it :)
** Running a process in the background
#+BEGIN_SRC shell
  <full_command> &
#+END_SRC

** Listing running processes
#+BEGIN_SRC shell :exports code
  ps -e   # Gives simple list
  ps aux  # Gives verbose list
  top     # Priority based ordering of processes
#+END_SRC

** Kill a process
#+BEGIN_SRC shell :exports code
  kill 1234           # Like ^C
  killall -9 firefox  # Force kill
#+END_SRC

* Network interaction
** Get IP address from host name
#+BEGIN_SRC shell
  resolveip localhost
#+END_SRC
** Is a host connected in a network?
#+BEGIN_SRC shell
  ping 127.0.0.1 -c 1
#+END_SRC
** Restart network module [ **root** ]
#+BEGIN_SRC shell
  systemctl restart NetworkManager
#+END_SRC
** Changing proxy
*** Set proxy
#+BEGIN_SRC shell
  export HTTP_PROXY='IP:PORT'
  export HTTPS_PROXY='IP:PORT'
  export http_proxy='IP:PORT'
  export https_proxy='IP:PORT'
#+END_SRC
*** Unset proxy
#+BEGIN_SRC shell
  unset https_proxy, http_proxy, HTTP_PROXY, HTTPS_PROXY
#+END_SRC
* File redirection
+ Send output elsewhere
+ Example
  #+BEGIN_SRC shell :exports code
    ls -l > ls.txt   # Sends output(stdout) to ls.txt
    cat < ls.txt     # Sends input from ls.txt to cat
  #+END_SRC
+ Replacing =>= with =>>= appends to the file
+ =stderr= is represented as =2>=

* =/dev= - The devices
+ =/dev/null=
+ =/dev/zero=
+ =/dev/input/mice=
+ =/dev/input/mouse0=
+ =/dev/sd?*/=

* Pipes

* Questions
